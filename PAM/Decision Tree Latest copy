{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "57f5ff7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Example Problem-Decision Tree-Blue or Red"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "13beb24f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import confusion_matrix,roc_curve,roc_auc_score\n",
    "from sklearn.metrics import precision_score,recall_score\n",
    "import itertools\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b132eeb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Undecided</th>\n",
       "      <th>Age</th>\n",
       "      <th>HomeOwner</th>\n",
       "      <th>Female</th>\n",
       "      <th>Married</th>\n",
       "      <th>HouseholdSize</th>\n",
       "      <th>Income</th>\n",
       "      <th>Education</th>\n",
       "      <th>Church</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>171.0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>96.0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>86.0</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>176.0</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>420.0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Undecided  Age  HomeOwner  Female  Married  HouseholdSize  Income  \\\n",
       "0          1   51          1       1        1              4   171.0   \n",
       "1          1   37          1       1        1              3    96.0   \n",
       "2          1   53          1       1        1              6    86.0   \n",
       "3          0   33          1       1        1              2   176.0   \n",
       "4          0   46          1       1        1              6   420.0   \n",
       "\n",
       "   Education  Church  \n",
       "0         15       0  \n",
       "1         18       0  \n",
       "2         20       0  \n",
       "3         18       1  \n",
       "4         15       1  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Reading the file\n",
    "mydata=pd.read_csv(\"BlueorRed.csv\")\n",
    "mydata.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "03e89e16",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    1\n",
      "1    1\n",
      "2    1\n",
      "3    0\n",
      "4    0\n",
      "Name: Undecided, dtype: int64\n",
      "   Age  HomeOwner  Female  Married  HouseholdSize  Income  Education  Church\n",
      "0   51          1       1        1              4   171.0         15       0\n",
      "1   37          1       1        1              3    96.0         18       0\n",
      "2   53          1       1        1              6    86.0         20       0\n",
      "3   33          1       1        1              2   176.0         18       1\n",
      "4   46          1       1        1              6   420.0         15       1\n"
     ]
    }
   ],
   "source": [
    "Y=mydata[\"Undecided\"]\n",
    "X=mydata.iloc[:,1:9]\n",
    "print(Y.head())\n",
    "print(X.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b6ba5f61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7000, 8)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=2)\n",
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "062316d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier\n",
    "clf_tree=DecisionTreeClassifier()\n",
    "clf_tree=DecisionTreeClassifier(criterion=\"entropy\",max_depth=7)\n",
    "clf_tree.fit(X_train,Y_train)\n",
    "tree_predict=clf_tree.predict(X_train)\n",
    "round(accuracy_score(Y_train,tree_predict),3)\n",
    "pred_prob=clf_tree.predict_proba(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0af582fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(143.59247448979593, 203.85, 'X[6] <= 12.5\\nentropy = 0.97\\nsamples = 7000\\nvalue = [4211, 2789]'),\n",
       " Text(61.49387755102041, 176.67000000000002, 'X[0] <= 35.5\\nentropy = 0.15\\nsamples = 2092\\nvalue = [2047, 45]'),\n",
       " Text(35.01734693877551, 149.49, 'X[5] <= 247.0\\nentropy = 0.082\\nsamples = 488\\nvalue = [483, 5]'),\n",
       " Text(25.622448979591837, 122.31, 'X[5] <= 67.25\\nentropy = 0.056\\nsamples = 471\\nvalue = [468, 3]'),\n",
       " Text(22.206122448979592, 95.13, 'X[5] <= 66.75\\nentropy = 0.126\\nsamples = 173\\nvalue = [170, 3]'),\n",
       " Text(13.66530612244898, 67.94999999999999, 'X[0] <= 21.5\\nentropy = 0.093\\nsamples = 169\\nvalue = [167, 2]'),\n",
       " Text(6.83265306122449, 40.77000000000001, 'X[7] <= 0.5\\nentropy = 0.811\\nsamples = 4\\nvalue = [3, 1]'),\n",
       " Text(3.416326530612245, 13.590000000000003, 'entropy = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(10.248979591836735, 13.590000000000003, 'entropy = 1.0\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(20.49795918367347, 40.77000000000001, 'X[5] <= 18.5\\nentropy = 0.053\\nsamples = 165\\nvalue = [164, 1]'),\n",
       " Text(17.081632653061224, 13.590000000000003, 'entropy = 0.176\\nsamples = 38\\nvalue = [37, 1]'),\n",
       " Text(23.914285714285715, 13.590000000000003, 'entropy = 0.0\\nsamples = 127\\nvalue = [127, 0]'),\n",
       " Text(30.746938775510205, 67.94999999999999, 'X[4] <= 5.5\\nentropy = 0.811\\nsamples = 4\\nvalue = [3, 1]'),\n",
       " Text(27.33061224489796, 40.77000000000001, 'entropy = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(34.16326530612245, 40.77000000000001, 'X[7] <= 0.5\\nentropy = 1.0\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(30.746938775510205, 13.590000000000003, 'entropy = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(37.57959183673469, 13.590000000000003, 'entropy = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(29.038775510204083, 95.13, 'entropy = 0.0\\nsamples = 298\\nvalue = [298, 0]'),\n",
       " Text(44.412244897959184, 122.31, 'X[5] <= 256.5\\nentropy = 0.523\\nsamples = 17\\nvalue = [15, 2]'),\n",
       " Text(40.99591836734694, 95.13, 'X[2] <= 0.5\\nentropy = 0.918\\nsamples = 3\\nvalue = [1, 2]'),\n",
       " Text(37.57959183673469, 67.94999999999999, 'entropy = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(44.412244897959184, 67.94999999999999, 'entropy = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n",
       " Text(47.82857142857143, 95.13, 'entropy = 0.0\\nsamples = 14\\nvalue = [14, 0]'),\n",
       " Text(87.9704081632653, 149.49, 'X[1] <= 0.5\\nentropy = 0.168\\nsamples = 1604\\nvalue = [1564, 40]'),\n",
       " Text(58.077551020408166, 122.31, 'X[0] <= 44.5\\nentropy = 0.087\\nsamples = 456\\nvalue = [451, 5]'),\n",
       " Text(54.66122448979592, 95.13, 'entropy = 0.0\\nsamples = 157\\nvalue = [157, 0]'),\n",
       " Text(61.49387755102041, 95.13, 'X[2] <= 0.5\\nentropy = 0.123\\nsamples = 299\\nvalue = [294, 5]'),\n",
       " Text(58.077551020408166, 67.94999999999999, 'entropy = 0.0\\nsamples = 70\\nvalue = [70, 0]'),\n",
       " Text(64.91020408163266, 67.94999999999999, 'X[5] <= 14.75\\nentropy = 0.152\\nsamples = 229\\nvalue = [224, 5]'),\n",
       " Text(58.077551020408166, 40.77000000000001, 'X[5] <= 9.5\\nentropy = 0.337\\nsamples = 32\\nvalue = [30, 2]'),\n",
       " Text(54.66122448979592, 13.590000000000003, 'entropy = 0.0\\nsamples = 18\\nvalue = [18, 0]'),\n",
       " Text(61.49387755102041, 13.590000000000003, 'entropy = 0.592\\nsamples = 14\\nvalue = [12, 2]'),\n",
       " Text(71.74285714285715, 40.77000000000001, 'X[7] <= 0.5\\nentropy = 0.114\\nsamples = 197\\nvalue = [194, 3]'),\n",
       " Text(68.3265306122449, 13.590000000000003, 'entropy = 0.191\\nsamples = 102\\nvalue = [99, 3]'),\n",
       " Text(75.15918367346939, 13.590000000000003, 'entropy = 0.0\\nsamples = 95\\nvalue = [95, 0]'),\n",
       " Text(117.86326530612246, 122.31, 'X[6] <= 8.5\\nentropy = 0.197\\nsamples = 1148\\nvalue = [1113, 35]'),\n",
       " Text(100.78163265306122, 95.13, 'X[5] <= 43.5\\nentropy = 0.241\\nsamples = 529\\nvalue = [508, 21]'),\n",
       " Text(92.24081632653062, 67.94999999999999, 'X[4] <= 1.5\\nentropy = 0.12\\nsamples = 184\\nvalue = [181, 3]'),\n",
       " Text(85.40816326530613, 40.77000000000001, 'X[5] <= 15.5\\nentropy = 0.31\\nsamples = 36\\nvalue = [34, 2]'),\n",
       " Text(81.99183673469388, 13.590000000000003, 'entropy = 0.544\\nsamples = 16\\nvalue = [14, 2]'),\n",
       " Text(88.82448979591837, 13.590000000000003, 'entropy = 0.0\\nsamples = 20\\nvalue = [20, 0]'),\n",
       " Text(99.07346938775511, 40.77000000000001, 'X[0] <= 39.5\\nentropy = 0.058\\nsamples = 148\\nvalue = [147, 1]'),\n",
       " Text(95.65714285714286, 13.590000000000003, 'entropy = 0.242\\nsamples = 25\\nvalue = [24, 1]'),\n",
       " Text(102.48979591836735, 13.590000000000003, 'entropy = 0.0\\nsamples = 123\\nvalue = [123, 0]'),\n",
       " Text(109.32244897959184, 67.94999999999999, 'X[5] <= 44.25\\nentropy = 0.296\\nsamples = 345\\nvalue = [327, 18]'),\n",
       " Text(105.9061224489796, 40.77000000000001, 'entropy = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(112.73877551020408, 40.77000000000001, 'X[4] <= 5.5\\nentropy = 0.284\\nsamples = 344\\nvalue = [327, 17]'),\n",
       " Text(109.32244897959184, 13.590000000000003, 'entropy = 0.306\\nsamples = 311\\nvalue = [294, 17]'),\n",
       " Text(116.15510204081633, 13.590000000000003, 'entropy = 0.0\\nsamples = 33\\nvalue = [33, 0]'),\n",
       " Text(134.9448979591837, 95.13, 'X[7] <= 0.5\\nentropy = 0.156\\nsamples = 619\\nvalue = [605, 14]'),\n",
       " Text(122.98775510204082, 67.94999999999999, 'X[4] <= 3.5\\nentropy = 0.08\\nsamples = 304\\nvalue = [301, 3]'),\n",
       " Text(119.57142857142857, 40.77000000000001, 'entropy = 0.0\\nsamples = 148\\nvalue = [148, 0]'),\n",
       " Text(126.40408163265306, 40.77000000000001, 'X[0] <= 41.5\\nentropy = 0.137\\nsamples = 156\\nvalue = [153, 3]'),\n",
       " Text(122.98775510204082, 13.590000000000003, 'entropy = 0.0\\nsamples = 55\\nvalue = [55, 0]'),\n",
       " Text(129.8204081632653, 13.590000000000003, 'entropy = 0.193\\nsamples = 101\\nvalue = [98, 3]'),\n",
       " Text(146.90204081632655, 67.94999999999999, 'X[4] <= 6.5\\nentropy = 0.218\\nsamples = 315\\nvalue = [304, 11]'),\n",
       " Text(140.06938775510204, 40.77000000000001, 'X[0] <= 48.5\\nentropy = 0.179\\nsamples = 296\\nvalue = [288, 8]'),\n",
       " Text(136.6530612244898, 13.590000000000003, 'entropy = 0.243\\nsamples = 199\\nvalue = [191, 8]'),\n",
       " Text(143.4857142857143, 13.590000000000003, 'entropy = 0.0\\nsamples = 97\\nvalue = [97, 0]'),\n",
       " Text(153.73469387755102, 40.77000000000001, 'X[5] <= 124.0\\nentropy = 0.629\\nsamples = 19\\nvalue = [16, 3]'),\n",
       " Text(150.31836734693877, 13.590000000000003, 'entropy = 0.845\\nsamples = 11\\nvalue = [8, 3]'),\n",
       " Text(157.15102040816328, 13.590000000000003, 'entropy = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n",
       " Text(225.69107142857143, 176.67000000000002, 'X[7] <= 0.5\\nentropy = 0.99\\nsamples = 4908\\nvalue = [2164, 2744]'),\n",
       " Text(183.62755102040816, 149.49, 'X[2] <= 0.5\\nentropy = 0.749\\nsamples = 2420\\nvalue = [518, 1902]'),\n",
       " Text(163.98367346938775, 122.31, 'X[6] <= 16.5\\nentropy = 0.904\\nsamples = 535\\nvalue = [364, 171]'),\n",
       " Text(157.15102040816328, 95.13, 'X[5] <= 174.5\\nentropy = 0.685\\nsamples = 203\\nvalue = [37, 166]'),\n",
       " Text(153.73469387755102, 67.94999999999999, 'entropy = 0.0\\nsamples = 166\\nvalue = [0, 166]'),\n",
       " Text(160.56734693877553, 67.94999999999999, 'entropy = 0.0\\nsamples = 37\\nvalue = [37, 0]'),\n",
       " Text(170.81632653061226, 95.13, 'X[4] <= 2.5\\nentropy = 0.113\\nsamples = 332\\nvalue = [327, 5]'),\n",
       " Text(167.4, 67.94999999999999, 'entropy = 0.0\\nsamples = 125\\nvalue = [125, 0]'),\n",
       " Text(174.23265306122448, 67.94999999999999, 'X[5] <= 132.0\\nentropy = 0.164\\nsamples = 207\\nvalue = [202, 5]'),\n",
       " Text(167.4, 40.77000000000001, 'X[4] <= 3.5\\nentropy = 0.093\\nsamples = 168\\nvalue = [166, 2]'),\n",
       " Text(163.98367346938775, 13.590000000000003, 'entropy = 0.169\\nsamples = 80\\nvalue = [78, 2]'),\n",
       " Text(170.81632653061226, 13.590000000000003, 'entropy = 0.0\\nsamples = 88\\nvalue = [88, 0]'),\n",
       " Text(181.065306122449, 40.77000000000001, 'X[5] <= 158.25\\nentropy = 0.391\\nsamples = 39\\nvalue = [36, 3]'),\n",
       " Text(177.64897959183673, 13.590000000000003, 'entropy = 0.672\\nsamples = 17\\nvalue = [14, 3]'),\n",
       " Text(184.48163265306124, 13.590000000000003, 'entropy = 0.0\\nsamples = 22\\nvalue = [22, 0]'),\n",
       " Text(203.27142857142857, 122.31, 'X[5] <= 174.5\\nentropy = 0.408\\nsamples = 1885\\nvalue = [154, 1731]'),\n",
       " Text(194.73061224489797, 95.13, 'X[0] <= 29.5\\nentropy = 0.024\\nsamples = 1670\\nvalue = [4, 1666]'),\n",
       " Text(191.31428571428572, 67.94999999999999, 'X[6] <= 16.0\\nentropy = 0.605\\nsamples = 27\\nvalue = [4, 23]'),\n",
       " Text(187.89795918367346, 40.77000000000001, 'entropy = 0.0\\nsamples = 18\\nvalue = [0, 18]'),\n",
       " Text(194.73061224489797, 40.77000000000001, 'X[6] <= 17.5\\nentropy = 0.991\\nsamples = 9\\nvalue = [4, 5]'),\n",
       " Text(191.31428571428572, 13.590000000000003, 'entropy = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n",
       " Text(198.14693877551022, 13.590000000000003, 'entropy = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n",
       " Text(198.14693877551022, 67.94999999999999, 'entropy = 0.0\\nsamples = 1643\\nvalue = [0, 1643]'),\n",
       " Text(211.8122448979592, 95.13, 'X[6] <= 17.0\\nentropy = 0.884\\nsamples = 215\\nvalue = [150, 65]'),\n",
       " Text(204.9795918367347, 67.94999999999999, 'X[4] <= 3.5\\nentropy = 0.169\\nsamples = 120\\nvalue = [117, 3]'),\n",
       " Text(201.56326530612245, 40.77000000000001, 'entropy = 0.0\\nsamples = 41\\nvalue = [41, 0]'),\n",
       " Text(208.39591836734695, 40.77000000000001, 'X[0] <= 30.5\\nentropy = 0.233\\nsamples = 79\\nvalue = [76, 3]'),\n",
       " Text(204.9795918367347, 13.590000000000003, 'entropy = 1.0\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(211.8122448979592, 13.590000000000003, 'entropy = 0.174\\nsamples = 77\\nvalue = [75, 2]'),\n",
       " Text(218.64489795918368, 67.94999999999999, 'X[5] <= 251.0\\nentropy = 0.932\\nsamples = 95\\nvalue = [33, 62]'),\n",
       " Text(215.22857142857143, 40.77000000000001, 'entropy = 0.0\\nsamples = 62\\nvalue = [0, 62]'),\n",
       " Text(222.06122448979593, 40.77000000000001, 'entropy = 0.0\\nsamples = 33\\nvalue = [33, 0]'),\n",
       " Text(267.7545918367347, 149.49, 'X[6] <= 16.5\\nentropy = 0.923\\nsamples = 2488\\nvalue = [1646, 842]'),\n",
       " Text(237.43469387755104, 122.31, 'X[5] <= 174.5\\nentropy = 0.649\\nsamples = 957\\nvalue = [159, 798]'),\n",
       " Text(234.0183673469388, 95.13, 'entropy = 0.0\\nsamples = 792\\nvalue = [0, 792]'),\n",
       " Text(240.85102040816327, 95.13, 'X[6] <= 13.5\\nentropy = 0.225\\nsamples = 165\\nvalue = [159, 6]'),\n",
       " Text(232.31020408163266, 67.94999999999999, 'X[5] <= 249.0\\nentropy = 0.65\\nsamples = 12\\nvalue = [10, 2]'),\n",
       " Text(228.8938775510204, 40.77000000000001, 'X[5] <= 246.0\\nentropy = 0.918\\nsamples = 6\\nvalue = [4, 2]'),\n",
       " Text(225.47755102040816, 13.590000000000003, 'entropy = 0.722\\nsamples = 5\\nvalue = [4, 1]'),\n",
       " Text(232.31020408163266, 13.590000000000003, 'entropy = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(235.72653061224491, 40.77000000000001, 'entropy = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n",
       " Text(249.3918367346939, 67.94999999999999, 'X[6] <= 15.5\\nentropy = 0.175\\nsamples = 153\\nvalue = [149, 4]'),\n",
       " Text(242.5591836734694, 40.77000000000001, 'X[0] <= 35.5\\nentropy = 0.107\\nsamples = 141\\nvalue = [139, 2]'),\n",
       " Text(239.14285714285714, 13.590000000000003, 'entropy = 0.286\\nsamples = 40\\nvalue = [38, 2]'),\n",
       " Text(245.97551020408164, 13.590000000000003, 'entropy = 0.0\\nsamples = 101\\nvalue = [101, 0]'),\n",
       " Text(256.2244897959184, 40.77000000000001, 'X[4] <= 1.5\\nentropy = 0.65\\nsamples = 12\\nvalue = [10, 2]'),\n",
       " Text(252.80816326530612, 13.590000000000003, 'entropy = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(259.6408163265306, 13.590000000000003, 'entropy = 0.439\\nsamples = 11\\nvalue = [10, 1]'),\n",
       " Text(298.0744897959184, 122.31, 'X[6] <= 19.0\\nentropy = 0.188\\nsamples = 1531\\nvalue = [1487, 44]'),\n",
       " Text(278.430612244898, 95.13, 'X[0] <= 42.5\\nentropy = 0.23\\nsamples = 721\\nvalue = [694, 27]'),\n",
       " Text(266.47346938775513, 67.94999999999999, 'X[3] <= 0.5\\nentropy = 0.163\\nsamples = 333\\nvalue = [325, 8]'),\n",
       " Text(263.0571428571429, 40.77000000000001, 'entropy = 0.0\\nsamples = 93\\nvalue = [93, 0]'),\n",
       " Text(269.8897959183674, 40.77000000000001, 'X[5] <= 110.25\\nentropy = 0.211\\nsamples = 240\\nvalue = [232, 8]'),\n",
       " Text(266.47346938775513, 13.590000000000003, 'entropy = 0.299\\nsamples = 132\\nvalue = [125, 7]'),\n",
       " Text(273.3061224489796, 13.590000000000003, 'entropy = 0.076\\nsamples = 108\\nvalue = [107, 1]'),\n",
       " Text(290.38775510204084, 67.94999999999999, 'X[5] <= 96.75\\nentropy = 0.282\\nsamples = 388\\nvalue = [369, 19]'),\n",
       " Text(283.55510204081634, 40.77000000000001, 'X[0] <= 49.5\\nentropy = 0.184\\nsamples = 214\\nvalue = [208, 6]'),\n",
       " Text(280.1387755102041, 13.590000000000003, 'entropy = 0.276\\nsamples = 126\\nvalue = [120, 6]'),\n",
       " Text(286.9714285714286, 13.590000000000003, 'entropy = 0.0\\nsamples = 88\\nvalue = [88, 0]'),\n",
       " Text(297.2204081632653, 40.77000000000001, 'X[5] <= 107.25\\nentropy = 0.383\\nsamples = 174\\nvalue = [161, 13]'),\n",
       " Text(293.8040816326531, 13.590000000000003, 'entropy = 0.779\\nsamples = 26\\nvalue = [20, 6]'),\n",
       " Text(300.63673469387754, 13.590000000000003, 'entropy = 0.275\\nsamples = 148\\nvalue = [141, 7]'),\n",
       " Text(317.7183673469388, 95.13, 'X[4] <= 3.5\\nentropy = 0.147\\nsamples = 810\\nvalue = [793, 17]'),\n",
       " Text(307.46938775510205, 67.94999999999999, 'X[0] <= 51.5\\nentropy = 0.108\\nsamples = 559\\nvalue = [551, 8]'),\n",
       " Text(304.0530612244898, 40.77000000000001, 'entropy = 0.0\\nsamples = 152\\nvalue = [152, 0]'),\n",
       " Text(310.8857142857143, 40.77000000000001, 'X[5] <= 24.5\\nentropy = 0.14\\nsamples = 407\\nvalue = [399, 8]'),\n",
       " Text(307.46938775510205, 13.590000000000003, 'entropy = 0.323\\nsamples = 51\\nvalue = [48, 3]'),\n",
       " Text(314.30204081632655, 13.590000000000003, 'entropy = 0.107\\nsamples = 356\\nvalue = [351, 5]'),\n",
       " Text(327.9673469387755, 67.94999999999999, 'X[0] <= 64.5\\nentropy = 0.223\\nsamples = 251\\nvalue = [242, 9]'),\n",
       " Text(324.55102040816325, 40.77000000000001, 'X[0] <= 41.5\\nentropy = 0.248\\nsamples = 218\\nvalue = [209, 9]'),\n",
       " Text(321.13469387755106, 13.590000000000003, 'entropy = 0.811\\nsamples = 4\\nvalue = [3, 1]'),\n",
       " Text(327.9673469387755, 13.590000000000003, 'entropy = 0.23\\nsamples = 214\\nvalue = [206, 8]'),\n",
       " Text(331.38367346938776, 40.77000000000001, 'entropy = 0.0\\nsamples = 33\\nvalue = [33, 0]')]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "tree.plot_tree(clf_tree,filled=True, fontsize=8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2bec9a1b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[4211,    0],\n",
       "       [  97, 2692]], dtype=int64)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(Y_train,tree_predict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "89088b74",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm=confusion_matrix(Y_train,tree_predict)\n",
    "sns.heatmap(cm,annot=True,cmap=\"Blues\",fmt=\".0f\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d5651a95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      4211\n",
      "           1       1.00      0.97      0.98      2789\n",
      "\n",
      "    accuracy                           0.99      7000\n",
      "   macro avg       0.99      0.98      0.99      7000\n",
      "weighted avg       0.99      0.99      0.99      7000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "Report=classification_report(Y_train,tree_predict)\n",
    "print((Report))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a330205a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>HomeOwner</th>\n",
       "      <th>Female</th>\n",
       "      <th>Married</th>\n",
       "      <th>HouseholdSize</th>\n",
       "      <th>Income</th>\n",
       "      <th>Education</th>\n",
       "      <th>Church</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.010258</td>\n",
       "      <td>0.000689</td>\n",
       "      <td>0.090262</td>\n",
       "      <td>0.000613</td>\n",
       "      <td>0.004127</td>\n",
       "      <td>0.225834</td>\n",
       "      <td>0.547084</td>\n",
       "      <td>0.121132</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Age  HomeOwner    Female   Married  HouseholdSize    Income  \\\n",
       "0  0.010258   0.000689  0.090262  0.000613       0.004127  0.225834   \n",
       "\n",
       "   Education    Church  \n",
       "0   0.547084  0.121132  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "importances=clf_tree.feature_importances_\n",
    "importances\n",
    "importances=pd.DataFrame(importances)\n",
    "Importance=importances.transpose()\n",
    "Importance.columns=[\"Age\",\"HomeOwner\",\"Female\",\"Married\",\"HouseholdSize\",\n",
    "                    \"Income\",\"Education\",\"Church\"]\n",
    "Importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8d3e6369",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=10, estimator=DecisionTreeClassifier(),\n",
       "             param_grid=[{'criterion': ['gini', 'entropy'],\n",
       "                          'max_depth': range(2, 10)}],\n",
       "             scoring='roc_auc')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "tuned_parameters=[{\"criterion\":[\"gini\",\"entropy\"],\n",
    "                  \"max_depth\":range(2,10)}]\n",
    "clf_tree=DecisionTreeClassifier()\n",
    "clf=GridSearchCV(clf_tree,\n",
    "                tuned_parameters,\n",
    "                cv=10,\n",
    "                scoring=\"roc_auc\")\n",
    "clf.fit(X,Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c5efdcdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9798138674475085"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9cae0e9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'criterion': 'entropy', 'max_depth': 7}"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f41dbce6",
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction=tree_predict\n",
    "Prediction=pd.DataFrame(prediction)\n",
    "Prediction\n",
    "Prediction=Prediction.iloc[:,1:9]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ac849682",
   "metadata": {},
   "outputs": [],
   "source": [
    "pred_prob=pd.DataFrame(pred_prob)\n",
    "pred_prob\n",
    "pred_class=(pred_prob[1]>=0.5).astype(np.int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0c43a0bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import(roc_auc_score,roc_curve)\n",
    "Y_train.head()\n",
    "pred_class\n",
    "dt_auc=roc_auc_score(Y_train.astype(int),pred_class)\n",
    "fpr,tpr,thresholds=roc_curve(Y_train.astype(int),pred_prob[1])\n",
    "plt.figure()\n",
    "plt.plot(fpr,tpr, label=\"Decision Tree(area=%0.3f)\" % dt_auc,lw=4,color=\"red\")\n",
    "plt.plot([0,1],[0,1],\"r--\")\n",
    "plt.xlim([0,1])\n",
    "plt.ylim([0,1.05])\n",
    "plt.xlabel(\"False Positive\")\n",
    "plt.ylabel(\"True Positive\")\n",
    "plt.title(\"Receiver Operative Characteristics Curve\")\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "98b6297d",
   "metadata": {},
   "outputs": [],
   "source": [
    "clf_tree.fit(X_test,Y_test)\n",
    "tree_predict_test=clf_tree.predict(X_test)\n",
    "round(accuracy_score(Y_test,tree_predict_test),3)\n",
    "pred_prob=clf_tree.predict_proba(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b857892b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(167.21804347826088, 211.4, 'X[6] <= 12.5\\ngini = 0.483\\nsamples = 3000\\nvalue = [1775, 1225]'),\n",
       " Text(107.62728260869565, 199.32, 'X[0] <= 66.5\\ngini = 0.04\\nsamples = 925\\nvalue = [906, 19]'),\n",
       " Text(78.42326086956521, 187.24, 'X[0] <= 43.5\\ngini = 0.037\\nsamples = 903\\nvalue = [886, 17]'),\n",
       " Text(49.12826086956522, 175.16, 'X[0] <= 41.5\\ngini = 0.055\\nsamples = 458\\nvalue = [445, 13]'),\n",
       " Text(22.562608695652173, 163.07999999999998, 'X[5] <= 73.5\\ngini = 0.04\\nsamples = 389\\nvalue = [381, 8]'),\n",
       " Text(19.651304347826088, 151.0, 'gini = 0.0\\nsamples = 151\\nvalue = [151, 0]'),\n",
       " Text(25.473913043478262, 151.0, 'X[5] <= 74.5\\ngini = 0.065\\nsamples = 238\\nvalue = [230, 8]'),\n",
       " Text(14.556521739130435, 138.92000000000002, 'X[0] <= 37.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(11.645217391304348, 126.84, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(17.46782608695652, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(36.391304347826086, 138.92000000000002, 'X[6] <= 8.5\\ngini = 0.058\\nsamples = 235\\nvalue = [228, 7]'),\n",
       " Text(23.290434782608695, 126.84, 'X[0] <= 35.5\\ngini = 0.121\\nsamples = 77\\nvalue = [72, 5]'),\n",
       " Text(20.37913043478261, 114.75999999999999, 'X[7] <= 0.5\\ngini = 0.198\\nsamples = 45\\nvalue = [40, 5]'),\n",
       " Text(11.645217391304348, 102.67999999999999, 'X[0] <= 28.5\\ngini = 0.071\\nsamples = 27\\nvalue = [26, 1]'),\n",
       " Text(8.73391304347826, 90.6, 'X[1] <= 0.5\\ngini = 0.245\\nsamples = 7\\nvalue = [6, 1]'),\n",
       " Text(5.822608695652174, 78.52000000000001, 'X[4] <= 3.0\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(2.911304347826087, 66.44, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(8.73391304347826, 66.44, 'X[3] <= 0.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(5.822608695652174, 54.359999999999985, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(11.645217391304348, 54.359999999999985, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(11.645217391304348, 78.52000000000001, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n",
       " Text(14.556521739130435, 90.6, 'gini = 0.0\\nsamples = 20\\nvalue = [20, 0]'),\n",
       " Text(29.11304347826087, 102.67999999999999, 'X[5] <= 169.0\\ngini = 0.346\\nsamples = 18\\nvalue = [14, 4]'),\n",
       " Text(26.20173913043478, 90.6, 'X[5] <= 160.5\\ngini = 0.426\\nsamples = 13\\nvalue = [9, 4]'),\n",
       " Text(23.290434782608695, 78.52000000000001, 'X[5] <= 126.5\\ngini = 0.375\\nsamples = 12\\nvalue = [9, 3]'),\n",
       " Text(20.37913043478261, 66.44, 'X[4] <= 5.5\\ngini = 0.444\\nsamples = 9\\nvalue = [6, 3]'),\n",
       " Text(17.46782608695652, 54.359999999999985, 'X[0] <= 25.5\\ngini = 0.5\\nsamples = 6\\nvalue = [3, 3]'),\n",
       " Text(14.556521739130435, 42.28, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(20.37913043478261, 42.28, 'X[5] <= 81.5\\ngini = 0.48\\nsamples = 5\\nvalue = [2, 3]'),\n",
       " Text(17.46782608695652, 30.19999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(23.290434782608695, 30.19999999999999, 'X[4] <= 3.5\\ngini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n",
       " Text(20.37913043478261, 18.120000000000005, 'X[2] <= 0.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(17.46782608695652, 6.039999999999992, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(23.290434782608695, 6.039999999999992, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(26.20173913043478, 18.120000000000005, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n",
       " Text(23.290434782608695, 54.359999999999985, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n",
       " Text(26.20173913043478, 66.44, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n",
       " Text(29.11304347826087, 78.52000000000001, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(32.02434782608696, 90.6, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n",
       " Text(26.20173913043478, 114.75999999999999, 'gini = 0.0\\nsamples = 32\\nvalue = [32, 0]'),\n",
       " Text(49.49217391304348, 126.84, 'X[5] <= 215.0\\ngini = 0.025\\nsamples = 158\\nvalue = [156, 2]'),\n",
       " Text(43.6695652173913, 114.75999999999999, 'X[3] <= 0.5\\ngini = 0.014\\nsamples = 144\\nvalue = [143, 1]'),\n",
       " Text(40.75826086956522, 102.67999999999999, 'X[5] <= 125.0\\ngini = 0.087\\nsamples = 22\\nvalue = [21, 1]'),\n",
       " Text(37.84695652173913, 90.6, 'gini = 0.0\\nsamples = 14\\nvalue = [14, 0]'),\n",
       " Text(43.6695652173913, 90.6, 'X[5] <= 132.0\\ngini = 0.219\\nsamples = 8\\nvalue = [7, 1]'),\n",
       " Text(40.75826086956522, 78.52000000000001, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(46.58086956521739, 78.52000000000001, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n",
       " Text(46.58086956521739, 102.67999999999999, 'gini = 0.0\\nsamples = 122\\nvalue = [122, 0]'),\n",
       " Text(55.31478260869565, 114.75999999999999, 'X[5] <= 217.5\\ngini = 0.133\\nsamples = 14\\nvalue = [13, 1]'),\n",
       " Text(52.40347826086956, 102.67999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(58.22608695652174, 102.67999999999999, 'gini = 0.0\\nsamples = 13\\nvalue = [13, 0]'),\n",
       " Text(75.69391304347826, 163.07999999999998, 'X[6] <= 8.5\\ngini = 0.134\\nsamples = 69\\nvalue = [64, 5]'),\n",
       " Text(72.78260869565217, 151.0, 'gini = 0.0\\nsamples = 30\\nvalue = [30, 0]'),\n",
       " Text(78.60521739130435, 151.0, 'X[5] <= 233.0\\ngini = 0.224\\nsamples = 39\\nvalue = [34, 5]'),\n",
       " Text(72.78260869565217, 138.92000000000002, 'X[5] <= 99.0\\ngini = 0.193\\nsamples = 37\\nvalue = [33, 4]'),\n",
       " Text(69.87130434782608, 126.84, 'X[5] <= 97.0\\ngini = 0.278\\nsamples = 24\\nvalue = [20, 4]'),\n",
       " Text(66.96, 114.75999999999999, 'X[5] <= 56.5\\ngini = 0.227\\nsamples = 23\\nvalue = [20, 3]'),\n",
       " Text(64.04869565217392, 102.67999999999999, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n",
       " Text(69.87130434782608, 102.67999999999999, 'X[5] <= 59.0\\ngini = 0.305\\nsamples = 16\\nvalue = [13, 3]'),\n",
       " Text(66.96, 90.6, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(72.78260869565217, 90.6, 'X[5] <= 66.25\\ngini = 0.231\\nsamples = 15\\nvalue = [13, 2]'),\n",
       " Text(66.96, 78.52000000000001, 'X[5] <= 65.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(64.04869565217392, 66.44, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(69.87130434782608, 66.44, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(78.60521739130435, 78.52000000000001, 'X[4] <= 4.5\\ngini = 0.153\\nsamples = 12\\nvalue = [11, 1]'),\n",
       " Text(75.69391304347826, 66.44, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n",
       " Text(81.51652173913044, 66.44, 'X[0] <= 42.5\\ngini = 0.278\\nsamples = 6\\nvalue = [5, 1]'),\n",
       " Text(78.60521739130435, 54.359999999999985, 'X[7] <= 0.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(75.69391304347826, 42.28, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(81.51652173913044, 42.28, 'X[5] <= 93.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(78.60521739130435, 30.19999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(84.42782608695651, 30.19999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(84.42782608695651, 54.359999999999985, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n",
       " Text(72.78260869565217, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(75.69391304347826, 126.84, 'gini = 0.0\\nsamples = 13\\nvalue = [13, 0]'),\n",
       " Text(84.42782608695651, 138.92000000000002, 'X[4] <= 4.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(81.51652173913044, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(87.3391304347826, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(107.71826086956521, 175.16, 'X[0] <= 49.5\\ngini = 0.018\\nsamples = 445\\nvalue = [441, 4]'),\n",
       " Text(104.80695652173912, 163.07999999999998, 'gini = 0.0\\nsamples = 187\\nvalue = [187, 0]'),\n",
       " Text(110.6295652173913, 163.07999999999998, 'X[0] <= 51.5\\ngini = 0.031\\nsamples = 258\\nvalue = [254, 4]'),\n",
       " Text(96.07304347826087, 151.0, 'X[3] <= 0.5\\ngini = 0.093\\nsamples = 41\\nvalue = [39, 2]'),\n",
       " Text(93.16173913043478, 138.92000000000002, 'gini = 0.0\\nsamples = 16\\nvalue = [16, 0]'),\n",
       " Text(98.98434782608696, 138.92000000000002, 'X[5] <= 32.0\\ngini = 0.147\\nsamples = 25\\nvalue = [23, 2]'),\n",
       " Text(93.16173913043478, 126.84, 'X[5] <= 24.0\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(90.25043478260869, 114.75999999999999, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(96.07304347826087, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(104.80695652173912, 126.84, 'X[4] <= 2.5\\ngini = 0.087\\nsamples = 22\\nvalue = [21, 1]'),\n",
       " Text(101.89565217391305, 114.75999999999999, 'X[5] <= 83.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(98.98434782608696, 102.67999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(104.80695652173912, 102.67999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(107.71826086956521, 114.75999999999999, 'gini = 0.0\\nsamples = 20\\nvalue = [20, 0]'),\n",
       " Text(125.18608695652173, 151.0, 'X[5] <= 144.5\\ngini = 0.018\\nsamples = 217\\nvalue = [215, 2]'),\n",
       " Text(119.36347826086957, 138.92000000000002, 'X[5] <= 21.5\\ngini = 0.01\\nsamples = 190\\nvalue = [189, 1]'),\n",
       " Text(116.45217391304348, 126.84, 'X[5] <= 20.5\\ngini = 0.057\\nsamples = 34\\nvalue = [33, 1]'),\n",
       " Text(113.54086956521739, 114.75999999999999, 'gini = 0.0\\nsamples = 29\\nvalue = [29, 0]'),\n",
       " Text(119.36347826086957, 114.75999999999999, 'X[0] <= 59.5\\ngini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n",
       " Text(116.45217391304348, 102.67999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(122.27478260869565, 102.67999999999999, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n",
       " Text(122.27478260869565, 126.84, 'gini = 0.0\\nsamples = 156\\nvalue = [156, 0]'),\n",
       " Text(131.0086956521739, 138.92000000000002, 'X[5] <= 147.5\\ngini = 0.071\\nsamples = 27\\nvalue = [26, 1]'),\n",
       " Text(128.09739130434784, 126.84, 'X[7] <= 0.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(125.18608695652173, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(131.0086956521739, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(133.92, 126.84, 'gini = 0.0\\nsamples = 25\\nvalue = [25, 0]'),\n",
       " Text(136.8313043478261, 187.24, 'X[0] <= 69.5\\ngini = 0.165\\nsamples = 22\\nvalue = [20, 2]'),\n",
       " Text(133.92, 175.16, 'X[5] <= 29.0\\ngini = 0.375\\nsamples = 8\\nvalue = [6, 2]'),\n",
       " Text(131.0086956521739, 163.07999999999998, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n",
       " Text(136.8313043478261, 163.07999999999998, 'X[1] <= 0.5\\ngini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n",
       " Text(133.92, 151.0, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(139.74260869565217, 151.0, 'X[5] <= 43.0\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(136.8313043478261, 138.92000000000002, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(142.65391304347827, 138.92000000000002, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(139.74260869565217, 175.16, 'gini = 0.0\\nsamples = 14\\nvalue = [14, 0]'),\n",
       " Text(226.80880434782608, 199.32, 'X[7] <= 0.5\\ngini = 0.487\\nsamples = 2075\\nvalue = [869, 1206]'),\n",
       " Text(189.96260869565216, 187.24, 'X[2] <= 0.5\\ngini = 0.317\\nsamples = 1048\\nvalue = [207, 841]'),\n",
       " Text(161.57739130434783, 175.16, 'X[6] <= 17.0\\ngini = 0.457\\nsamples = 226\\nvalue = [146, 80]'),\n",
       " Text(148.47652173913045, 163.07999999999998, 'X[5] <= 170.5\\ngini = 0.247\\nsamples = 90\\nvalue = [13, 77]'),\n",
       " Text(145.56521739130434, 151.0, 'gini = 0.0\\nsamples = 76\\nvalue = [0, 76]'),\n",
       " Text(151.38782608695652, 151.0, 'X[4] <= 4.5\\ngini = 0.133\\nsamples = 14\\nvalue = [13, 1]'),\n",
       " Text(148.47652173913045, 138.92000000000002, 'gini = 0.0\\nsamples = 11\\nvalue = [11, 0]'),\n",
       " Text(154.2991304347826, 138.92000000000002, 'X[0] <= 40.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(151.38782608695652, 126.84, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(157.2104347826087, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(174.6782608695652, 163.07999999999998, 'X[0] <= 37.0\\ngini = 0.043\\nsamples = 136\\nvalue = [133, 3]'),\n",
       " Text(168.85565217391303, 151.0, 'X[0] <= 35.5\\ngini = 0.346\\nsamples = 9\\nvalue = [7, 2]'),\n",
       " Text(165.94434782608695, 138.92000000000002, 'X[4] <= 3.5\\ngini = 0.219\\nsamples = 8\\nvalue = [7, 1]'),\n",
       " Text(163.03304347826088, 126.84, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n",
       " Text(168.85565217391303, 126.84, 'X[5] <= 130.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(165.94434782608695, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(171.76695652173913, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(171.76695652173913, 138.92000000000002, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(180.50086956521739, 151.0, 'X[1] <= 0.5\\ngini = 0.016\\nsamples = 127\\nvalue = [126, 1]'),\n",
       " Text(177.5895652173913, 138.92000000000002, 'X[5] <= 89.0\\ngini = 0.153\\nsamples = 12\\nvalue = [11, 1]'),\n",
       " Text(174.6782608695652, 126.84, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n",
       " Text(180.50086956521739, 126.84, 'X[5] <= 94.5\\ngini = 0.278\\nsamples = 6\\nvalue = [5, 1]'),\n",
       " Text(177.5895652173913, 114.75999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(183.4121739130435, 114.75999999999999, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n",
       " Text(183.4121739130435, 138.92000000000002, 'gini = 0.0\\nsamples = 115\\nvalue = [115, 0]'),\n",
       " Text(218.34782608695653, 175.16, 'X[5] <= 176.5\\ngini = 0.137\\nsamples = 822\\nvalue = [61, 761]'),\n",
       " Text(206.70260869565217, 163.07999999999998, 'X[5] <= 174.5\\ngini = 0.016\\nsamples = 741\\nvalue = [6, 735]'),\n",
       " Text(200.88, 151.0, 'X[0] <= 34.5\\ngini = 0.011\\nsamples = 735\\nvalue = [4, 731]'),\n",
       " Text(197.96869565217392, 138.92000000000002, 'X[0] <= 33.5\\ngini = 0.104\\nsamples = 73\\nvalue = [4, 69]'),\n",
       " Text(192.14608695652174, 126.84, 'X[5] <= 37.5\\ngini = 0.033\\nsamples = 59\\nvalue = [1, 58]'),\n",
       " Text(189.23478260869564, 114.75999999999999, 'X[0] <= 31.5\\ngini = 0.219\\nsamples = 8\\nvalue = [1, 7]'),\n",
       " Text(186.32347826086956, 102.67999999999999, 'gini = 0.0\\nsamples = 6\\nvalue = [0, 6]'),\n",
       " Text(192.14608695652174, 102.67999999999999, 'X[6] <= 16.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(189.23478260869564, 90.6, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(195.05739130434782, 90.6, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(195.05739130434782, 114.75999999999999, 'gini = 0.0\\nsamples = 51\\nvalue = [0, 51]'),\n",
       " Text(203.7913043478261, 126.84, 'X[6] <= 16.0\\ngini = 0.337\\nsamples = 14\\nvalue = [3, 11]'),\n",
       " Text(200.88, 114.75999999999999, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n",
       " Text(206.70260869565217, 114.75999999999999, 'X[6] <= 17.5\\ngini = 0.5\\nsamples = 6\\nvalue = [3, 3]'),\n",
       " Text(203.7913043478261, 102.67999999999999, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n",
       " Text(209.61391304347825, 102.67999999999999, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n",
       " Text(203.7913043478261, 138.92000000000002, 'gini = 0.0\\nsamples = 662\\nvalue = [0, 662]'),\n",
       " Text(212.52521739130435, 151.0, 'X[6] <= 17.0\\ngini = 0.444\\nsamples = 6\\nvalue = [2, 4]'),\n",
       " Text(209.61391304347825, 138.92000000000002, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(215.43652173913043, 138.92000000000002, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n",
       " Text(229.99304347826086, 163.07999999999998, 'X[6] <= 17.0\\ngini = 0.436\\nsamples = 81\\nvalue = [55, 26]'),\n",
       " Text(224.17043478260868, 151.0, 'X[5] <= 449.5\\ngini = 0.043\\nsamples = 45\\nvalue = [44, 1]'),\n",
       " Text(221.2591304347826, 138.92000000000002, 'gini = 0.0\\nsamples = 39\\nvalue = [39, 0]'),\n",
       " Text(227.08173913043478, 138.92000000000002, 'X[5] <= 472.5\\ngini = 0.278\\nsamples = 6\\nvalue = [5, 1]'),\n",
       " Text(224.17043478260868, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(229.99304347826086, 126.84, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n",
       " Text(235.81565217391304, 151.0, 'X[5] <= 262.5\\ngini = 0.424\\nsamples = 36\\nvalue = [11, 25]'),\n",
       " Text(232.90434782608696, 138.92000000000002, 'gini = 0.0\\nsamples = 25\\nvalue = [0, 25]'),\n",
       " Text(238.72695652173914, 138.92000000000002, 'gini = 0.0\\nsamples = 11\\nvalue = [11, 0]'),\n",
       " Text(263.655, 187.24, 'X[6] <= 16.5\\ngini = 0.458\\nsamples = 1027\\nvalue = [662, 365]'),\n",
       " Text(247.4608695652174, 175.16, 'X[5] <= 174.5\\ngini = 0.242\\nsamples = 411\\nvalue = [58, 353]'),\n",
       " Text(244.5495652173913, 163.07999999999998, 'gini = 0.0\\nsamples = 351\\nvalue = [0, 351]'),\n",
       " Text(250.37217391304347, 163.07999999999998, 'X[0] <= 37.5\\ngini = 0.064\\nsamples = 60\\nvalue = [58, 2]'),\n",
       " Text(247.4608695652174, 151.0, 'X[0] <= 34.5\\ngini = 0.26\\nsamples = 13\\nvalue = [11, 2]'),\n",
       " Text(244.5495652173913, 138.92000000000002, 'gini = 0.0\\nsamples = 10\\nvalue = [10, 0]'),\n",
       " Text(250.37217391304347, 138.92000000000002, 'X[1] <= 0.5\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n",
       " Text(247.4608695652174, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(253.28347826086957, 126.84, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n",
       " Text(253.28347826086957, 151.0, 'gini = 0.0\\nsamples = 47\\nvalue = [47, 0]'),\n",
       " Text(279.8491304347826, 175.16, 'X[5] <= 5.5\\ngini = 0.038\\nsamples = 616\\nvalue = [604, 12]'),\n",
       " Text(262.0173913043478, 163.07999999999998, 'X[3] <= 0.5\\ngini = 0.198\\nsamples = 9\\nvalue = [8, 1]'),\n",
       " Text(259.1060869565217, 151.0, 'X[2] <= 0.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(256.1947826086957, 138.92000000000002, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(262.0173913043478, 138.92000000000002, 'X[5] <= 4.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(259.1060869565217, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(264.92869565217393, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(264.92869565217393, 151.0, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n",
       " Text(297.6808695652174, 163.07999999999998, 'X[4] <= 4.5\\ngini = 0.036\\nsamples = 607\\nvalue = [596, 11]'),\n",
       " Text(283.8521739130435, 151.0, 'X[0] <= 70.5\\ngini = 0.026\\nsamples = 523\\nvalue = [516, 7]'),\n",
       " Text(276.5739130434783, 138.92000000000002, 'X[5] <= 99.5\\ngini = 0.023\\nsamples = 506\\nvalue = [500, 6]'),\n",
       " Text(270.7513043478261, 126.84, 'X[1] <= 0.5\\ngini = 0.007\\nsamples = 292\\nvalue = [291, 1]'),\n",
       " Text(267.84, 114.75999999999999, 'X[0] <= 41.0\\ngini = 0.064\\nsamples = 30\\nvalue = [29, 1]'),\n",
       " Text(264.92869565217393, 102.67999999999999, 'X[0] <= 39.5\\ngini = 0.278\\nsamples = 6\\nvalue = [5, 1]'),\n",
       " Text(262.0173913043478, 90.6, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n",
       " Text(267.84, 90.6, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(270.7513043478261, 102.67999999999999, 'gini = 0.0\\nsamples = 24\\nvalue = [24, 0]'),\n",
       " Text(273.6626086956522, 114.75999999999999, 'gini = 0.0\\nsamples = 262\\nvalue = [262, 0]'),\n",
       " Text(282.39652173913043, 126.84, 'X[5] <= 100.75\\ngini = 0.046\\nsamples = 214\\nvalue = [209, 5]'),\n",
       " Text(279.48521739130433, 114.75999999999999, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n",
       " Text(285.30782608695654, 114.75999999999999, 'X[5] <= 141.0\\ngini = 0.028\\nsamples = 212\\nvalue = [209, 3]'),\n",
       " Text(282.39652173913043, 102.67999999999999, 'X[5] <= 137.0\\ngini = 0.053\\nsamples = 111\\nvalue = [108, 3]'),\n",
       " Text(276.5739130434783, 90.6, 'X[5] <= 126.5\\ngini = 0.019\\nsamples = 103\\nvalue = [102, 1]'),\n",
       " Text(273.6626086956522, 78.52000000000001, 'gini = 0.0\\nsamples = 85\\nvalue = [85, 0]'),\n",
       " Text(279.48521739130433, 78.52000000000001, 'X[5] <= 127.5\\ngini = 0.105\\nsamples = 18\\nvalue = [17, 1]'),\n",
       " Text(276.5739130434783, 66.44, 'X[4] <= 2.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(273.6626086956522, 54.359999999999985, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(279.48521739130433, 54.359999999999985, 'X[0] <= 38.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(276.5739130434783, 42.28, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(282.39652173913043, 42.28, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(282.39652173913043, 66.44, 'gini = 0.0\\nsamples = 15\\nvalue = [15, 0]'),\n",
       " Text(288.2191304347826, 90.6, 'X[0] <= 50.5\\ngini = 0.375\\nsamples = 8\\nvalue = [6, 2]'),\n",
       " Text(285.30782608695654, 78.52000000000001, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n",
       " Text(291.1304347826087, 78.52000000000001, 'X[5] <= 138.5\\ngini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n",
       " Text(288.2191304347826, 66.44, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(294.0417391304348, 66.44, 'X[5] <= 139.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(291.1304347826087, 54.359999999999985, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(296.9530434782609, 54.359999999999985, 'X[4] <= 2.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(294.0417391304348, 42.28, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(299.86434782608694, 42.28, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(288.2191304347826, 102.67999999999999, 'gini = 0.0\\nsamples = 101\\nvalue = [101, 0]'),\n",
       " Text(291.1304347826087, 138.92000000000002, 'X[5] <= 26.0\\ngini = 0.111\\nsamples = 17\\nvalue = [16, 1]'),\n",
       " Text(288.2191304347826, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(294.0417391304348, 126.84, 'gini = 0.0\\nsamples = 16\\nvalue = [16, 0]'),\n",
       " Text(311.5095652173913, 151.0, 'X[0] <= 35.5\\ngini = 0.091\\nsamples = 84\\nvalue = [80, 4]'),\n",
       " Text(302.77565217391304, 138.92000000000002, 'X[0] <= 34.5\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n",
       " Text(299.86434782608694, 126.84, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(305.68695652173915, 126.84, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(320.24347826086955, 138.92000000000002, 'X[0] <= 59.5\\ngini = 0.071\\nsamples = 81\\nvalue = [78, 3]'),\n",
       " Text(311.5095652173913, 126.84, 'X[5] <= 146.5\\ngini = 0.032\\nsamples = 61\\nvalue = [60, 1]'),\n",
       " Text(308.5982608695652, 114.75999999999999, 'gini = 0.0\\nsamples = 47\\nvalue = [47, 0]'),\n",
       " Text(314.4208695652174, 114.75999999999999, 'X[5] <= 148.5\\ngini = 0.133\\nsamples = 14\\nvalue = [13, 1]'),\n",
       " Text(311.5095652173913, 102.67999999999999, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(317.33217391304345, 102.67999999999999, 'gini = 0.0\\nsamples = 13\\nvalue = [13, 0]'),\n",
       " Text(328.9773913043478, 126.84, 'X[0] <= 62.5\\ngini = 0.18\\nsamples = 20\\nvalue = [18, 2]'),\n",
       " Text(326.06608695652176, 114.75999999999999, 'X[5] <= 57.5\\ngini = 0.375\\nsamples = 8\\nvalue = [6, 2]'),\n",
       " Text(323.15478260869565, 102.67999999999999, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n",
       " Text(328.9773913043478, 102.67999999999999, 'X[0] <= 61.5\\ngini = 0.444\\nsamples = 6\\nvalue = [4, 2]'),\n",
       " Text(326.06608695652176, 90.6, 'X[5] <= 128.5\\ngini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n",
       " Text(323.15478260869565, 78.52000000000001, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n",
       " Text(328.9773913043478, 78.52000000000001, 'X[4] <= 5.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n",
       " Text(326.06608695652176, 66.44, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n",
       " Text(331.8886956521739, 66.44, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(331.8886956521739, 90.6, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n",
       " Text(331.8886956521739, 114.75999999999999, 'gini = 0.0\\nsamples = 12\\nvalue = [12, 0]')]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "tree.plot_tree(clf_tree,filled=True, fontsize=8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "24ca1775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1775,    0],\n",
       "       [   0, 1225]], dtype=int64)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(Y_test,tree_predict_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "30539829",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm=confusion_matrix(Y_test,tree_predict_test)\n",
    "sns.heatmap(cm,annot=True,cmap=\"Blues\",fmt=\".0f\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b3ca6de8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00      1775\n",
      "           1       1.00      1.00      1.00      1225\n",
      "\n",
      "    accuracy                           1.00      3000\n",
      "   macro avg       1.00      1.00      1.00      3000\n",
      "weighted avg       1.00      1.00      1.00      3000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "Report=classification_report(Y_test,tree_predict_test)\n",
    "print((Report))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c10a2370",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>HomeOwner</th>\n",
       "      <th>Female</th>\n",
       "      <th>Married</th>\n",
       "      <th>HouseholdSize</th>\n",
       "      <th>Income</th>\n",
       "      <th>Education</th>\n",
       "      <th>Church</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.015036</td>\n",
       "      <td>0.001788</td>\n",
       "      <td>0.080886</td>\n",
       "      <td>0.001136</td>\n",
       "      <td>0.005302</td>\n",
       "      <td>0.163507</td>\n",
       "      <td>0.587872</td>\n",
       "      <td>0.144473</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Age  HomeOwner    Female   Married  HouseholdSize    Income  \\\n",
       "0  0.015036   0.001788  0.080886  0.001136       0.005302  0.163507   \n",
       "\n",
       "   Education    Church  \n",
       "0   0.587872  0.144473  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "importances=clf_tree.feature_importances_\n",
    "importances\n",
    "importances=pd.DataFrame(importances)\n",
    "Importance=importances.transpose()\n",
    "Importance.columns=[\"Age\",\"HomeOwner\",\"Female\",\"Married\",\"HouseholdSize\",\n",
    "                    \"Income\",\"Education\",\"Church\"]\n",
    "Importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "7c0c97f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=10, estimator=DecisionTreeClassifier(),\n",
       "             param_grid=[{'criterion': ['gini', 'entropy'],\n",
       "                          'max_depth': range(2, 10)}],\n",
       "             scoring='roc_auc')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "tuned_parameters=[{\"criterion\":[\"gini\",\"entropy\"],\n",
    "                  \"max_depth\":range(2,10)}]\n",
    "clf_tree=DecisionTreeClassifier()\n",
    "clf=GridSearchCV(clf_tree,\n",
    "                tuned_parameters,\n",
    "                cv=10,\n",
    "                scoring=\"roc_auc\")\n",
    "clf.fit(X,Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "94997a95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9798987269167883"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8ffedf9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'criterion': 'entropy', 'max_depth': 7}"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a15a1941",
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction=tree_predict_test\n",
    "Prediction=pd.DataFrame(prediction)\n",
    "Prediction\n",
    "Prediction=Prediction.iloc[:,1:9]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "1f5ae6c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "pred_prob=pd.DataFrame(pred_prob)\n",
    "pred_prob\n",
    "pred_class=(pred_prob[1]>=0.5).astype(np.int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "eda2ff50",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import(roc_auc_score,roc_curve)\n",
    "Y_test.head()\n",
    "pred_class\n",
    "dt_auc=roc_auc_score(Y_test.astype(int),pred_class)\n",
    "fpr,tpr,thresholds=roc_curve(Y_test.astype(int),pred_prob[1])\n",
    "plt.figure()\n",
    "plt.plot(fpr,tpr, label=\"Decision Tree(area=%0.3f)\" % dt_auc,lw=4,color=\"red\")\n",
    "plt.plot([0,1],[0,1],\"r--\")\n",
    "plt.xlim([0,1])\n",
    "plt.ylim([0,1.05])\n",
    "plt.xlabel(\"False Positive\")\n",
    "plt.ylabel(\"True Positive\")\n",
    "plt.title(\"Receiver Operative Characteristics Curve\")\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
